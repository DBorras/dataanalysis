cor(pixel189, labels)
cor(pixel189, labels, method="spearman")
cov(pixel189, labels, method="spearman")
cov(pixel189, labels)
cov(pixel189, labels)
str(prcomp)
help(prcomp)
var(sampleSet$pixel190)
var(sampleSet)
variance <- var(sampleSet)
summary(variance)
str(variance)
sampleSet[1:10]
sampleSet[1:10,]
var (sampleSet[1:10,])
var (sampleSet$label)
var (sampleSet$pixel0)
var (sampleSet$pixel1)
var (sampleSet$pixel10)
var (sampleSet$pixel11)
var(1:10)
class(sampleSEt)
class(sampleSet)
for (i in 1:nrow(sampleSet)){
print(var(as.vector(as.matrix(sampleSet[i,]))))
}
nrow(sampleSet)
apply(sampleSet, 2, var)
sampleSet[, grep('^(a|c)$', names(sampleSet), invert=TRUE)
)
sampleSet[, grep('^(a|c)$', names(sampleSet), invert=TRUE)]
names(sampleSet)
sampleSet[, grep('^label*', names(sampleSet), invert=TRUE)]
sampleSet[0]
sampleSet[1]
sampleSet$label
apply(sampleSet, 2, var)
subset( sampleSet, select = -label )
apply(subset( sampleSet, select = -label ), 2, var)
excludingLabek <- subset( sampleSet, select = -label )
apply(excludingLabe, 2, var)
apply(excludingLabel, 2, var)
excludingLabel <- subset( sampleSet, select = -label )
apply(excludingLabel, 2, var)
apply(excludingLabel, 2, var) = 0
apply(excludingLabel, 2, var) == 0
excludingLabel(apply(excludingLabel, 2, var) == 0)
excludingLabel[apply(excludingLabel, 2, var) == 0]
excludingLabel[apply(excludingLabel, 2, var) == 0]
excludingLabel[apply(excludingLabel, 2, var) == 0][1]
excludingLabel[apply(excludingLabel, 2, var) == 0][1,]
headers(excludingLabel[apply(excludingLabel, 2, var) == 0][1,])
names(excludingLabel[apply(excludingLabel, 2, var) == 0][1,])
count(names(excludingLabel[apply(excludingLabel, 2, var) == 0][1,]))
size(names(excludingLabel[apply(excludingLabel, 2, var) == 0][1,]))
length(names(excludingLabel[apply(excludingLabel, 2, var) == 0][1,]))
var(excludingLabel$pixel308)
var(excludingLabel$pixel143)
var(excludingLabel$pixel142)
excludingLabel[apply(excludingLabel, 2, var)
]
)
apply(excludingLabel, 2, var)
stem(apply(excludingLabel, 2, var))
help(stem)
stem(apply(excludingLabel, 2, var), atom = 1)
stem(apply(excludingLabel, 2, var), atom = 100)
stem(apply(excludingLabel, 2, var))
stem(apply(excludingLabel, 2, var), scale=2)
excludingLabel[apply(excludingLabel, 2, var) != 0][1,]
names(excludingLabel[apply(excludingLabel, 2, var) == 0][1,])
apply(excludingLabel, 2, var)
variances <- apply(excludingLabel, 2, var)
subset(variances, x > 0)
subset(variances)
variances <- apply(excludingLabel, 2, var)
class(variances)
list(variances)
list(variances)$pixel778
list(variances)
list(variances)[0]
list(variances)[0][0]
list(variances)
c(variances)
variances
variances <- apply(excludingLabel, 2, var)
headers(excludingLabel[excludingLabel == 0][1,])
names(excludingLabel[excludingLabel == 0][1,])
names(excludingLabel[variances == 0][1,])
pointlessFeatures <- names(excludingLabel[variances == 0][1,])
class(pointlessFeatures)
pointlessFeatures
write(file="mark.txt", pointlessFeatures)
hw1 <- read.csv("hw1_data.csv", header=TRUE)
names(hw1)
hw1[1,2]
hw1[1:2,]
length(hw1)
hw1
summary(hw1)
length(hw1(1,))
length(hw1[1,])
length(hw1[,1])
hw1[1:2,]
hw1[-1:2,]
hw1[-1:-2,]
hw_1(1:2,:)
hw_1[1:2,]
hw1[1:2,]
hw1[end,]
hw1[end,:]
hw1[end,]
hw1[1:2]
hw1[1:3]
hw1[47,]
names(hw1)
hw1[1:2,]
hw1
hw1[1:2,]
hw1[1,]
length(hw1[1,])
length(hw1[,2])
length(hw1[,1])
h1[47]
hw1[47]
hw1[47,]
hw1$Ozone
hw1$Ozone == NA
hw1[hw1$Ozone == NA]
hw1[hw1$Ozone == NA]
hw1$Ozone
hw1$Ozone == NA
hw1$Ozone
is.na(hw1$Ozone)
hw1[is.na(hw1$Ozone)]
is.na(hw1$Ozone)
hw1$Ozone[M(1:2,:)]
hw1$Ozone[is.na(hw1$Ozone)]
length(hw1$Ozone[is.na(hw1$Ozone)])
hw1[152:153]
length(hw1[, 1])
size <- length(hw1[, 1])
hw1[size-1:size,]
hw1[size-1:size,]
hw1[152:153,]
size
size <- length(hw1[[, 1]])
hw1[152:153,]
hw1$Date
hw1
names(hw1)
hw1$Month
class(hw1$Month)
hw1[hw1$Month == 6]
h1
hw1
hw1[is.na(hw1$Month)]
hw1[is.na(hw1$Ozone)]
subset(hw1, Ozone > 31)
subset(hw1, Ozone > 31 && Temp > 90)
subset(hw1, Ozone > 31 and Temp > 90)
subset(hw1, Ozone > 31 && Temp > 90)
subset(hw1, Ozone > 31 && Temp > 0)
subset(hw1, Ozone > 31 && Temp > 90)
subset(hw1, Temp > 90)
subset(hw1, Temp > 90, Ozone > 30)
subset(hw1, Temp > 90, Ozone > 31)
subset(hw1, Temp > 90,)
subset(hw1, Temp > 90, !is.na(Ozone))
subset(hw1, Temp > 90, !is.na(Ozone), Ozone > 31)
subset(hw1, Temp > 90, !is.na(Ozone))
subset(hw1, Temp > 90 && !is.na(Ozone))
subset(hw1, Temp > 90)
subset(hw1, Temp > 90 & Ozone > 31)
mean(subset(hw1, Temp > 90 & Ozone > 31))
colMeans(subset(hw1, Temp > 90 & Ozone > 31))
colMeans(hw1)
colMeans(subset(hw1, !is.na(Ozone)))
colMeans(subset(hw1, Month == 6))
x <- c(4, "a", TRUE)
class(x)
x
x <- c(1,3, 5) and y <- c(3, 2, 10)
x <- c(1,3, 5) ;y <- c(3, 2, 10)
rbind(x,y)
help(rbind)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- c(1,3, 5)
y <- c(3, 2, 10)
cinb(x,y)
cbind(x,y)
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x
x[x == 0] <- 6
x
x[x >= 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x
c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x
x[x %in% 1:5] <- 0
x
initial <- read.csv("train.csv", nrows=10000, header = TRUE)
sampleSet <- initial[sample(1:nrow(initial), 1000), ]
table(as.factor(sampleSet$label))
sampleSet.labels <- as.factor(sampleSet$label)
table(sampleSet.labels)
variances <- apply(excludingLabel, 2, var)
pointlessFeatures <- names(excludingLabel[variances == 0][1,])
pointlessFeatures
length(names(excludingLabel[apply(excludingLabel, 2, var) == 0][1,]))
initial <- read.csv("train.csv", header = TRUE)
sampleSet <- read.csv("train.csv", header = TRUE)
sampleSet.labels <- as.factor(sampleSet$label)
table(sampleSet.labels)
excludingLabel <- subset( sampleSet, select = -label)
variances <- apply(excludingLabel, 2, var)
pointlessFeatures <- names(excludingLabel[variances == 0][1,])
length(names(excludingLabel[apply(excludingLabel, 2, var) == 0][1,]))
pointlessFeatures
for(i in 1:10) { print(i)}
x <- 1
while(x < 3) { print("mark"); x++}
while(x < 3) {
print(x)
x++
}
while(x < 3) {
print(x)
x <- x + 1
}
mydata <- rnorm(100)
sd(mydata)
lm <- function(x) { x* x }
lm
show(lm)
search()
ls(environment)
ls(environment(x))
x <- 2
ls(environment(x))
make.NegLogLik <- function(data, fixed=c(FALSE, FALSE)) {
params <- fixed
function(p) {
params[!fixed] <- p
mu <- params[1]
sigma <- params[2]
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
-(a + b)
}
}
set.seed(1)
normals < rnorm(100,1,2)
normals <- rnorm(100,1,2)
nLL <- make.NegLogLik(normals)
ls(environment(nLL))
nLL
optim(c(mu = 0, sigma = 1), Nll)
optim(c(mu = 0, sigma = 1), nLL)
optim(c(mu = 0, sigma = 1), nLL)$par
nLL ,- make.NegLogLik(normals, c(FALSE,2))
normals <- rnorm(100,1,2)
nLL <- make.NegLogLik(normals, c(1, FALSE))
x <- seq(1.7, 1.9, len=100)
y <- sapply(x, nLL)
plot(x, exp(-(y - min(y))), type ="l"
)
plot(x, exp(-(y - min(y))), type ="l")
view(lm)
help(lm)
x <- list(a=1.5, b=rnorm(10))
lapply(x, mean)
x
x$b
mean(x$b)
x <- 1:4
lapply(x, runif)
help(runif)
x <- list(a = matrix(1:4,2,2), b=matrix(1:6,3,2))
x
lapply(x, function(elt) elt[,1])
x
lapply(x, function(elt) elt[,1])
lapply(x, function(elt) { elt[,1]})
x <- list(a=1:4, b = rnorm(10), c=rnorm(20,1), d=rnorm(100,5))
lapply(x, mean)
lapply(x, mean)
sapply(x, mean)
class(lapply(x, mean))
class(sapply(x, mean))
str(apply)
x <- matrix(rnorm(200), 20, 10)
apply(x, 1, sum)
x
apply(x, 2, mean)
apply(x, 2, mean)
apply(x, 1, mean)
rowSums <- apply(x,1,sum)
rowSums
x <- matrix(rnorm(200), 20, 10)
x
apply(x, 1, quantile, probs = (0.25.75))
apply(x, 1, quantile, probs = c(0.25.75))
apply(x, 1, quantile, probs = c(0.25,0.75))
array(2*2*10, c(2,2,10))
x <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
apply(a, c(1,2), mean)
rowMeans(a, dims=2)
a
x <- c(rnorm(10), runif(10), rnorm(10,1))
f <- gl(3,10)
split(x,f)
help(gl)
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
x
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
x <- rnorm(10)
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
str(split(x, list(f1,f2)))
str(split(x, list(f1,f2)), drop=TRUE)
str(mapply)
list(rep(1,4), rep(2,3), rep(3,2), rep(4,1))
mapply(rep, 1:4, 4:1)
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise(5, 1, 2)
noise(1:5, 1:5, 2)
mapply(noise, 1:5, 1:5, 2)
log(-1)
printmessage <- function(x) {
if(x > 0)
print("greater 0")
else
print("less than 0")
invisible(x)
}
printmessage(11)
x <- printmessage(11)
x
printmessage(NA)
printmessage(NA)
printmessage <- function(x) {
if(is.na(x))
print("na")
else if(x > 0)
print("greater 0")
else
print("less than 0")
invisible(x)
}
printmessage2(NA)
printmessage(NA)
x <- printmessage(NA)
x
mean(x)
mean(x'')
mean(x2)
traceback()
lm(y ~ x2)
traceback()
lm(y2 ~ x2)
lm(y2 ~ x2)
traceback()
y2
lm(y2 ~ x2)
debug(lm)
lm(y2 ~ x2)
n
n
read.csc("nofile")
read.csv(
read.csv("nofile")
)
read.csv("nofile")
options(error = recover)
read.csv("nofile")
pow <- function(x = 4, n = 3) {
x^n
}
pow()
(1:10)  > 5
x <- 1:10
x <- 0
if(x > 5) {}
x <- 0
}
if(x > 5) {}
if(x > 5) {
x <- 0
}
0
0
10
20
exit
exit()
0
0
0
log(4)
x
x <- 1:10
if(x > 5) { x <- 0 }
x
x <- 1:10
if(x > 5) {
x <- 0
}
library(datasets)
data(iris)
?iris
?iris
iris$Sepal.Length
mean(iris$Sepal.Length)
iris
help(subset)
subset(iris, species == "viriginica")
subset(iris, Species == "viriginica")
subset(iris, Species == "virginica")
subset(iris, Species == "virginica", select=Sepal.Length)
mean(subset(iris, Species == "virginica", select=Sepal.Length))
rowMeans(iris[, 1:4])
iris[, 1:3]
iris[, 1:4]
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
?apply
?rowMeans
colMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
mtcars
split(mtcars, cyl)
split(mtcars, mtcars$cyl)
?tapply
as.factor(mtcars$cyl)
tapply(mtcars$cyl, mtcars$msg, mean)
tapply(mtcars$msg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
debug(ls)
quit
exit*()
c
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
x
x > 5
if(x > 5) { print("mark")}
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 2, mean)
mean(subset(iris, Species == "virginica", select=Sepal.Length))
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
horseyp <- tapply(mtcars$hp, mtcars$cyl, mean)
horseyp$8
horseyp["8"]
horseyp["8"] - horsey["4"]
horseyp["8"] - horseyp["4"]
initial <- read.csv("train.csv", nrows=10000, header = TRUE)
mean(initial$label)
initial$label
names(initial)
quantile(initial$pixel200, probs=c(0, 25, 75, 100))
quantile(initial$pixel200, probs=c(0, 0.25, 0.75, 1))
quantile(initial$pixel200, probs=c(0, 0.25, 0.87, 1))
apply(initial, mean)
apply(initial, 2, mean)
apply(subset(initial, select=-label), 2, mean)
summary(subset(initial, select=-label))
initial
exit
c
c
c
()
c
c
c
